 }
      rcm->counter = counter;
      if (call AMSend.send(2, &packet, sizeof(radio_count_msg_t)) == SUCCESS) {
	locked = TRUE;
      }
    }
    call Leds.led0Toggle();
    call IntSource.read();	//this will clear the interruption
  }
 
  event void Y.readDone(error_t result, uint16_t data){
    counter1 ^= 0x7;
    if (locked) {
      return;
    }
    else {
      radio_count_msg_t* rcm = (radio_count_msg_t*)call Packet.getPayload(&packet, sizeof(radio_count_msg_t));
      if (rcm == NULL) {
	return;
      }
      rcm->counter = counter1;
      if (call AMSend.send(4, &packet, sizeof(radio_count_msg_t)) == SUCCESS) {
	locked = TRUE;
      }
    }
    call Leds.led1Toggle();
